name: Build Quasar

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - "docs/**"

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            arch: "win64_msvc2019_64"
          - os: ubuntu-latest
            arch: "gcc_64"

    name: Build Quasar
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          submodules: "recursive"

      - name: Setup Qt
        uses: jurplel/install-qt-action@v3.0.0
        with:
          version: "6.4.2"
          arch: ${{ matrix.arch }}
          modules: qtmultimedia qtwebengine qtpositioning qtwebchannel qtnetworkauth qtserialport

      - name: Configure Project Windows
        if: startsWith(matrix.os, 'windows')
        working-directory: quasar
        run: cmake --no-warn-unused-cli -DCMAKE_TOOLCHAIN_FILE:STRING=vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -S./ -B./build -G "Visual Studio 17 2022" -T host=x64 -A x64

      - name: Configure Project Linux
        if: (!startsWith(matrix.os, 'windows'))
        working-directory: quasar
        run: cmake --no-warn-unused-cli -DCMAKE_TOOLCHAIN_FILE:STRING=vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -S./ -B./build

      - name: Build Project
        working-directory: quasar
        run: cmake --build ./build --config Release --target ALL_BUILD --

      - name: Package Quasar
        if: startsWith(matrix.os, 'windows')
        working-directory: quasar
        shell: powershell
        run: |
          $QUASAR_VERSION = (Select-String -Path ./quasar/CMakeLists.txt -Pattern 'project\(quasar VERSION ([0-9\.]+)\)') | %{$_.Matches.Groups[1].value}
          $RELEASE_PACKAGE_FILE = "Quasar-win_x64-$QUASAR_VERSION.zip"
          Compress-Archive ./build/quasar/Release/ $RELEASE_PACKAGE_FILE
          $release_filepath = Get-ChildItem $RELEASE_PACKAGE_FILE | %{$_[0].FullName}
          echo "RELEASE_PACKAGE_PATH=$release_filepath" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload Artifact
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-artifact@v3
        with:
          name: Quasar-win_x64-Release
          path: ${{ env.RELEASE_PACKAGE_PATH }}
          if-no-files-found: error
          retention-days: 1
